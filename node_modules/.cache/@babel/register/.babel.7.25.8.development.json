{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Projects\\\\dev\\\\client-server\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Projects\\\\dev\\\\client-server\",\"filename\":\"C:\\\\Projects\\\\dev\\\\client-server\\\\src\\\\server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Projects\\\\dev\\\\client-server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-duplicate-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"_exploded\":true,\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"C:\\\\Projects\\\\dev\\\\client-server\\\\node_modules\\\\@babel\\\\preset-env\\\\lib\\\\index.js$46\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"C:\\\\Projects\\\\dev\\\\client-server\\\\node_modules\\\\@babel\\\\preset-env\\\\lib\\\\index.js$47\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.25.8:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _express = _interopRequireDefault(require(\"express\"));\nvar _expressSession = _interopRequireDefault(require(\"express-session\"));\nvar _mysql = _interopRequireDefault(require(\"mysql2\"));\nvar _cors = _interopRequireDefault(require(\"cors\"));\nvar _dotenv = require(\"dotenv\");\nvar _openai = _interopRequireDefault(require(\"openai\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { \"default\": e }; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n// Use require for express-mysql-session\nvar MySQLStore = require('express-mysql-session')(_expressSession[\"default\"]); // Fixes the issue\n\n(0, _dotenv.config)(); // Load environment variables from .env file\n\nvar app = (0, _express[\"default\"])();\nvar port = process.env.PORT || 5000;\napp.use((0, _cors[\"default\"])());\napp.use(_express[\"default\"].json()); // Built-in middleware for express to handle JSON\n\n// Create a MySQL pool\nvar pool = _mysql[\"default\"].createPool({\n  connectionLimit: 10,\n  host: process.env.DB_HOST,\n  user: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_DATABASE\n});\nvar openai = new _openai[\"default\"]({\n  apiKey: process.env.OPENAI_API_KEY\n});\nvar sessionStore = new MySQLStore({}, pool.promise());\nvar formatDate = function formatDate(date) {\n  var year = date.getFullYear();\n  var month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-indexed\n  var day = String(date.getDate()).padStart(2, '0');\n  var hours = String(date.getHours()).padStart(2, '0');\n  var minutes = String(date.getMinutes()).padStart(2, '0');\n  var seconds = String(date.getSeconds()).padStart(2, '0');\n  return \"\".concat(year, \"-\").concat(month, \"-\").concat(day, \" \").concat(hours, \":\").concat(minutes, \":\").concat(seconds);\n};\napp.use((0, _expressSession[\"default\"])({\n  //key: 'reallyavatar_cookie',  // The name of the session cookie\n  secret: process.env.SESSION_SECRET || 'techtreeglobal',\n  // Ensure this is set in .env\n  store: sessionStore,\n  // Store sessions in MySQL\n  resave: false,\n  // Don't save session if unmodified\n  saveUninitialized: true,\n  // Don't create session until something stored\n  cookie: {\n    maxAge: 1000 * 60 * 60 * 24,\n    // Session cookie will expire after 24 hours\n    secure: false // Should be true if you're using HTTPS (in production)\n  }\n}));\n\n// Example login endpoint using async/await with ES6 modules\napp.post('/login', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res) {\n    var _req$body, email, password, _yield$pool$promise$q, _yield$pool$promise$q2, results;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _req$body = req.body, email = _req$body.email, password = _req$body.password;\n          _context.next = 4;\n          return pool.promise().query('SELECT * FROM clients WHERE (email = ? AND password = ?) AND isActive = 1', [email, password]);\n        case 4:\n          _yield$pool$promise$q = _context.sent;\n          _yield$pool$promise$q2 = _slicedToArray(_yield$pool$promise$q, 1);\n          results = _yield$pool$promise$q2[0];\n          if (results.length > 0) {\n            // Save user info in session\n            req.session.user = {\n              id: results[0].id,\n              email: results[0].email,\n              name: results[0].name\n            };\n            res.status(200).json({\n              message: 'Login successful',\n              user: results[0]\n            });\n            console.log('Session after login:', req.session); // Log session data for debugging\n          } else {\n            res.status(401).json({\n              message: 'Invalid credentials'\n            });\n          }\n          _context.next = 13;\n          break;\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          res.status(500).json({\n            error: _context.t0.message\n          });\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.post('/logout', function (req, res) {\n  // Destroy the session\n  req.session.destroy(function (err) {\n    if (err) {\n      return res.status(500).json({\n        message: 'Logout failed',\n        error: err\n      });\n    }\n\n    // Clear the cookie on the client side\n    res.clearCookie('reallyavatar_cookie');\n    return res.status(200).json({\n      message: 'Logout successful'\n    });\n  });\n});\napp.get('/asst_list/:id', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res) {\n    var clientId, _yield$pool$promise$q3, _yield$pool$promise$q4, results;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          clientId = req.params.id;\n          _context2.next = 4;\n          return pool.promise().query('SELECT asst_id, name, instructions, avatar_name, DATE_FORMAT(updated_at, \"%Y-%m-%d %H:%i:%s\") as updated_at FROM assistants WHERE client_id = ?', [clientId]);\n        case 4:\n          _yield$pool$promise$q3 = _context2.sent;\n          _yield$pool$promise$q4 = _slicedToArray(_yield$pool$promise$q3, 1);\n          results = _yield$pool$promise$q4[0];\n          if (results.length > 0) {\n            res.send(results);\n          } else {\n            res.status(401).json({\n              message: 'Failed to fetch Assistants List'\n            });\n          }\n          _context2.next = 13;\n          break;\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          res.status(500).json({\n            error: _context2.t0.message\n          });\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[0, 10]]);\n  }));\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.get('/avatars_list/:id', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(req, res) {\n    var clientId, _yield$pool$promise$q5, _yield$pool$promise$q6, results;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          clientId = req.params.id;\n          _context3.next = 4;\n          return pool.promise().query('SELECT name FROM client_avatars WHERE client_id = ?', [clientId]);\n        case 4:\n          _yield$pool$promise$q5 = _context3.sent;\n          _yield$pool$promise$q6 = _slicedToArray(_yield$pool$promise$q5, 1);\n          results = _yield$pool$promise$q6[0];\n          if (results.length > 0) {\n            res.send(results);\n          } else {\n            res.status(401).json({\n              message: 'Failed to fetch Assistants List'\n            });\n          }\n          _context3.next = 13;\n          break;\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n          res.status(500).json({\n            error: _context3.t0.message\n          });\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[0, 10]]);\n  }));\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\napp.put('/update_assistant/:asst_id', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res) {\n    var asst_id, _req$body2, name, instructions, avatar_name, myUpdatedAssistant, _yield$pool$promise$q7, _yield$pool$promise$q8, results;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          asst_id = req.params.asst_id;\n          _req$body2 = req.body, name = _req$body2.name, instructions = _req$body2.instructions, avatar_name = _req$body2.avatar_name;\n          _context4.next = 5;\n          return openai.beta.assistants.update(asst_id, {\n            instructions: instructions,\n            name: name\n          });\n        case 5:\n          myUpdatedAssistant = _context4.sent;\n          _context4.next = 8;\n          return pool.promise().query('UPDATE assistants SET name = ?, instructions = ?, avatar_name = ? WHERE asst_id = ?', [name, instructions, avatar_name, asst_id]);\n        case 8:\n          _yield$pool$promise$q7 = _context4.sent;\n          _yield$pool$promise$q8 = _slicedToArray(_yield$pool$promise$q7, 1);\n          results = _yield$pool$promise$q8[0];\n          if (results.affectedRows > 0) {\n            res.status(200).json({\n              asst_id: asst_id,\n              name: name,\n              instructions: instructions,\n              avatar_name: avatar_name\n            });\n          } else {\n            res.status(404).json({\n              message: 'Assistant not found or no changes made'\n            });\n          }\n          _context4.next = 17;\n          break;\n        case 14:\n          _context4.prev = 14;\n          _context4.t0 = _context4[\"catch\"](0);\n          res.status(500).json({\n            error: _context4.t0.message\n          });\n        case 17:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[0, 14]]);\n  }));\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}());\napp.post('/create_assistant/:client_id', /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(req, res) {\n    var clientId, _req$body3, name, instructions, avatar_name, currentTimestamp, myAssistant, _yield$pool$promise$q9, _yield$pool$promise$q10, results;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          clientId = req.params.client_id;\n          _req$body3 = req.body, name = _req$body3.name, instructions = _req$body3.instructions, avatar_name = _req$body3.avatar_name;\n          currentTimestamp = formatDate(new Date());\n          _context5.next = 6;\n          return openai.beta.assistants.create({\n            instructions: instructions,\n            name: name,\n            model: \"gpt-4o\"\n          });\n        case 6:\n          myAssistant = _context5.sent;\n          _context5.next = 9;\n          return pool.promise().query('INSERT INTO assistants (asst_id, client_id, name, instructions, avatar_name) VALUES (?, ?, ?, ?, ?)', [myAssistant.id, clientId, name, instructions, avatar_name]);\n        case 9:\n          _yield$pool$promise$q9 = _context5.sent;\n          _yield$pool$promise$q10 = _slicedToArray(_yield$pool$promise$q9, 1);\n          results = _yield$pool$promise$q10[0];\n          if (results.affectedRows > 0) {\n            res.status(201).json({\n              message: 'Assistant created successfully',\n              assistant: {\n                asst_id: myAssistant.id,\n                client_id: clientId,\n                name: name,\n                instructions: instructions,\n                avatar_name: avatar_name,\n                updated_at: currentTimestamp\n              }\n            });\n          } else {\n            res.status(500).json({\n              message: 'Failed to save assistant in the database'\n            });\n          }\n          _context5.next = 19;\n          break;\n        case 15:\n          _context5.prev = 15;\n          _context5.t0 = _context5[\"catch\"](0);\n          // Handle errors gracefully and respond with a 500 status\n          console.error('Error creating assistant:', _context5.t0);\n          res.status(500).json({\n            error: _context5.t0.message\n          });\n        case 19:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[0, 15]]);\n  }));\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}());\napp.listen(port, function () {\n  console.log(\"Server running on port \".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_express","_interopRequireDefault","require","_expressSession","_mysql","_cors","_dotenv","_openai","e","__esModule","_regeneratorRuntime","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","toString","Array","from","test","isArray","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","MySQLStore","session","config","app","express","port","process","env","PORT","use","cors","json","pool","mysql","createPool","connectionLimit","host","DB_HOST","user","DB_USER","password","DB_PASSWORD","database","DB_DATABASE","openai","OpenAI","apiKey","OPENAI_API_KEY","sessionStore","promise","formatDate","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","concat","secret","SESSION_SECRET","store","resave","saveUninitialized","cookie","maxAge","secure","post","_ref","_callee","req","res","_req$body","email","_yield$pool$promise$q","_yield$pool$promise$q2","results","_callee$","_context","body","query","id","status","message","console","log","t0","error","_x","_x2","destroy","err","clearCookie","get","_ref2","_callee2","clientId","_yield$pool$promise$q3","_yield$pool$promise$q4","_callee2$","_context2","params","send","_x3","_x4","_ref3","_callee3","_yield$pool$promise$q5","_yield$pool$promise$q6","_callee3$","_context3","_x5","_x6","put","_ref4","_callee4","asst_id","_req$body2","instructions","avatar_name","myUpdatedAssistant","_yield$pool$promise$q7","_yield$pool$promise$q8","_callee4$","_context4","beta","assistants","update","affectedRows","_x7","_x8","_ref5","_callee5","_req$body3","currentTimestamp","myAssistant","_yield$pool$promise$q9","_yield$pool$promise$q10","_callee5$","_context5","client_id","Date","model","assistant","updated_at","_x9","_x10","listen"],"sourceRoot":"C:\\Projects\\dev\\client-server\\src\\","sources":["server.js"],"sourcesContent":["import express from 'express';\r\nimport session from 'express-session';\r\nimport mysql from 'mysql2';\r\nimport cors from 'cors';\r\nimport { config } from 'dotenv';\r\nimport OpenAI from \"openai\";\r\n\r\n// Use require for express-mysql-session\r\nconst MySQLStore = require('express-mysql-session')(session); // Fixes the issue\r\n\r\nconfig(); // Load environment variables from .env file\r\n\r\nconst app = express();\r\nconst port = process.env.PORT || 5000;\r\n\r\napp.use(cors());\r\napp.use(express.json()); // Built-in middleware for express to handle JSON\r\n\r\n// Create a MySQL pool\r\nconst pool = mysql.createPool({\r\n  connectionLimit: 10,\r\n  host: process.env.DB_HOST,\r\n  user: process.env.DB_USER,\r\n  password: process.env.DB_PASSWORD,\r\n  database: process.env.DB_DATABASE\r\n});\r\n\r\nconst openai = new OpenAI({\r\n  apiKey: process.env.OPENAI_API_KEY,\r\n});\r\n\r\nconst sessionStore = new MySQLStore({}, pool.promise());\r\n\r\nconst formatDate = (date) => {\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-indexed\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  const hours = String(date.getHours()).padStart(2, '0');\r\n  const minutes = String(date.getMinutes()).padStart(2, '0');\r\n  const seconds = String(date.getSeconds()).padStart(2, '0');\r\n\r\n  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n};\r\n\r\napp.use(session({\r\n  //key: 'reallyavatar_cookie',  // The name of the session cookie\r\n  secret: process.env.SESSION_SECRET || 'techtreeglobal', // Ensure this is set in .env\r\n  store: sessionStore, // Store sessions in MySQL\r\n  resave: false,  // Don't save session if unmodified\r\n  saveUninitialized: true,  // Don't create session until something stored\r\n  cookie: {\r\n      maxAge: 1000 * 60 * 60 * 24,  // Session cookie will expire after 24 hours\r\n      secure: false, // Should be true if you're using HTTPS (in production)\r\n  }\r\n}));\r\n\r\n// Example login endpoint using async/await with ES6 modules\r\napp.post('/login', async (req, res) => {\r\n  try {\r\n    const { email, password } = req.body;\r\n    const [results] = await pool.promise().query(\r\n      'SELECT * FROM clients WHERE (email = ? AND password = ?) AND isActive = 1',\r\n      [email, password]\r\n    );\r\n    if (results.length > 0) {\r\n      // Save user info in session\r\n      req.session.user = { id: results[0].id, email: results[0].email, name: results[0].name };\r\n      res.status(200).json({ message: 'Login successful', user: results[0] });\r\n      console.log('Session after login:', req.session); // Log session data for debugging\r\n    } else {\r\n      res.status(401).json({ message: 'Invalid credentials' });\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n}); \r\n\r\napp.post('/logout', (req, res) => {\r\n  // Destroy the session\r\n  req.session.destroy((err) => {\r\n    if (err) {\r\n      return res.status(500).json({ message: 'Logout failed', error: err });\r\n    }\r\n\r\n    // Clear the cookie on the client side\r\n    res.clearCookie('reallyavatar_cookie');\r\n    \r\n    return res.status(200).json({ message: 'Logout successful' });\r\n  });\r\n});\r\n\r\napp.get('/asst_list/:id', async (req, res) => {\r\n  try {\r\n    const clientId = req.params.id;\r\n    const [results] = await pool.promise().query(\r\n      'SELECT asst_id, name, instructions, avatar_name, DATE_FORMAT(updated_at, \"%Y-%m-%d %H:%i:%s\") as updated_at FROM assistants WHERE client_id = ?', [clientId]\r\n    );\r\n    if (results.length > 0) {\r\n      res.send(results);\r\n    } else {\r\n      res.status(401).json({ message: 'Failed to fetch Assistants List' });\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n});\r\n\r\n\r\napp.get('/avatars_list/:id', async (req, res) => {\r\n  try {\r\n  const  clientId  = req.params.id;\r\n  const [results] = await pool.promise().query(\r\n    'SELECT name FROM client_avatars WHERE client_id = ?', [clientId]\r\n  );\r\n  if (results.length > 0) {\r\n    res.send(results);\r\n   } else {\r\n    res.status(401).json({ message: 'Failed to fetch Assistants List' });\r\n  }\r\n  } catch (error) {\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n});\r\n\r\napp.put('/update_assistant/:asst_id', async (req, res) => {\r\n  try {\r\n    const asst_id = req.params.asst_id;\r\n    const { name, instructions, avatar_name } = req.body;\r\n\r\n    const myUpdatedAssistant = await openai.beta.assistants.update(\r\n      asst_id, \r\n      {\r\n        instructions: instructions, \r\n        name: name, \r\n      }\r\n    );\r\n\r\n    const [results] = await pool.promise().query(\r\n      'UPDATE assistants SET name = ?, instructions = ?, avatar_name = ? WHERE asst_id = ?',\r\n      [name, instructions, avatar_name, asst_id]\r\n    );\r\n\r\n \r\n    if (results.affectedRows > 0) {\r\n      res.status(200).json({\r\n        asst_id,\r\n        name,\r\n        instructions,\r\n        avatar_name,\r\n      });\r\n    } else {\r\n      res.status(404).json({ message: 'Assistant not found or no changes made' });\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n});\r\n\r\napp.post('/create_assistant/:client_id', async (req, res) => {\r\n  try {\r\n    const clientId = req.params.client_id; \r\n    const { name, instructions, avatar_name } = req.body; \r\n    const currentTimestamp = formatDate(new Date());\r\n\r\n    const myAssistant = await openai.beta.assistants.create({\r\n      instructions: instructions, \r\n      name: name,                 \r\n      model: \"gpt-4o\",           \r\n    });\r\n\r\n    const [results] = await pool.promise().query(\r\n      'INSERT INTO assistants (asst_id, client_id, name, instructions, avatar_name) VALUES (?, ?, ?, ?, ?)',\r\n      [myAssistant.id, clientId, name, instructions, avatar_name]\r\n    );\r\n\r\n    if (results.affectedRows > 0) {\r\n      res.status(201).json({\r\n        message: 'Assistant created successfully',\r\n        assistant: {\r\n          asst_id: myAssistant.id,\r\n          client_id: clientId,\r\n          name: name,\r\n          instructions: instructions,\r\n          avatar_name: avatar_name,\r\n          updated_at: currentTimestamp,\r\n        },\r\n      });\r\n    } else {\r\n      res.status(500).json({ message: 'Failed to save assistant in the database' });\r\n    }\r\n  } catch (error) {\r\n    // Handle errors gracefully and respond with a 500 status\r\n    console.error('Error creating assistant:', error);\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n});\r\n\r\n\r\n\r\napp.listen(port, () => {\r\n  console.log(`Server running on port ${port}`);\r\n});\r\n\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1729631733104}}